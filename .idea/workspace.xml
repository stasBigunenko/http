<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b5978d65-be42-4398-bbc3-d4985a9977b2" name="Default Changelist" comment="Added and repaired tests" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CoverageOptionsProvider">
    <option name="myAddOrReplace" value="1" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../go" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="postgres_storage" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedIndex" value="1" />
  </component>
  <component name="ProjectId" id="1w243AwoBNUlpb1fAReqKW8jqS6" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DatabaseDriversLRU" value="postgresql" />
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable..is.expanded" value="false" />
    <property name="configurable.GoLibrariesConfigurable.is.expanded" value="true" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../monorepa" />
    <property name="settings.editor.selected.configurable" value="go.vgo" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\goProjects\src\hackerRank" />
      <recent name="C:\goProjects\src\hackerRank\HackerrankChallange" />
      <recent name="C:\goProjects\src\http\cmd" />
      <recent name="C:\goProjects\src\src\hackerRank\HackerrankChallange" />
      <recent name="C:\goProjects\src\src\hackerRank" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\goProjects\src\http\cmd\grpcServer\configGRPC" />
      <recent name="C:\goProjects\src\http\cmd\http\configHTTP" />
      <recent name="C:\goProjects\src\http\pkg\gRPC\grpccontroller" />
      <recent name="C:\goProjects\src\http\cmd\http" />
      <recent name="C:\goProjects\src\http\cmd\grpcServer" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.go test src/http/pkg/services">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="http" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="http" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="TestServices_CreateId/Create_posts_empty in src/http/pkg/services" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="http" />
      <working_directory value="$PROJECT_DIR$/pkg/services" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="src/http/pkg/services" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestServices_CreateId\E$/^\QCreate_posts_empty\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestServices_CreateId/Create_posts_message in src/http/pkg/services" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="http" />
      <working_directory value="$PROJECT_DIR$/pkg/services" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="src/http/pkg/services" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestServices_CreateId\E$/^\QCreate_posts_message\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestStorageServer_CreateFromFile in src/http/pkg/gRPC" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="http" />
      <working_directory value="$PROJECT_DIR$/pkg/gRPC" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="src/http/pkg/gRPC" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestStorageServer_CreateFromFile\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="http" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="http" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="go test src/http/pkg/gRPC" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="http" />
      <working_directory value="$PROJECT_DIR$/pkg/gRPC" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="src/http/pkg/gRPC" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="go test src/http/pkg/services" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="http" />
      <working_directory value="$PROJECT_DIR$/pkg/services" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="src/http/pkg/services" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.go test src/http/pkg/services" />
        <item itemvalue="Go Test.TestServices_CreateId/Create_posts_message in src/http/pkg/services" />
        <item itemvalue="Go Test.TestServices_CreateId/Create_posts_empty in src/http/pkg/services" />
        <item itemvalue="Go Test.go test src/http/pkg/gRPC" />
        <item itemvalue="Go Test.TestStorageServer_CreateFromFile in src/http/pkg/gRPC" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="grpc" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Added simple middleware log" />
    <MESSAGE value="Added simple middleware log some fixes" />
    <MESSAGE value="Added some headers errors, refactored time format" />
    <MESSAGE value="Added some features, errors, process time" />
    <MESSAGE value="Changed Server struct and main file. Added shutdown timeout" />
    <MESSAGE value="Fixed some issues" />
    <MESSAGE value="Added const FilePath for the csv file" />
    <MESSAGE value="Added some features" />
    <MESSAGE value="Deleted simple log" />
    <MESSAGE value="Made some fixes" />
    <MESSAGE value="Trying with tests... doesn't work" />
    <MESSAGE value="Added some comments" />
    <MESSAGE value="Refactor some functions" />
    <MESSAGE value="Refactored Storage iterator in CreateFromFile" />
    <MESSAGE value="Refactored handler and added servicesInterface" />
    <MESSAGE value="Added untracked files" />
    <MESSAGE value="Remake router in handlers" />
    <MESSAGE value="Create Services Interface and remake main.go" />
    <MESSAGE value="Add handler tests" />
    <MESSAGE value="gRPC as storage to http" />
    <MESSAGE value="gRPC as storage to http with docker" />
    <MESSAGE value="Redis as storage with docker files" />
    <MESSAGE value="implemented postgres storage" />
    <MESSAGE value="implemented mongodb storage and small code cleaning" />
    <MESSAGE value="Added and repaired tests" />
    <option name="LAST_COMMIT_MESSAGE" value="Added and repaired tests" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/http$go_test_src_http_pkg_handlers__1_.out" NAME="go test src/http/pkg/handlers (1) Coverage Results" MODIFIED="1630673145951" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$TestGetPost_GET_post_Everything_OK_in_src_http_pkg_handlers.out" NAME="TestGetPost/GET_post_Everything_OK in src/http/pkg/handlers Coverage Results" MODIFIED="1630655635318" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$TestCreateId_in_src_http_pkg_services.out" NAME="TestCreateId in src/http/pkg/services Coverage Results" MODIFIED="1633010988820" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$TestGetAll_GetAll_post_Everything_OK_02_in_src_http_pkg_handlers.out" NAME="TestGetAll/GetAll_post_Everything_OK#02 in src/http/pkg/handlers Coverage Results" MODIFIED="1630656339185" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$TestCreatePost_in_src_http_pkg_handlers__1_.out" NAME="TestCreatePost in src/http/pkg/handlers (1) Coverage Results" MODIFIED="1630654684746" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$go_test_src_http_pkg_gRPC.out" NAME="go test src/http/pkg/gRPC Coverage Results" MODIFIED="1633016491214" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$TestPostHandler_CreatePost_in_src_http_pkg_handlers.out" NAME="TestPostHandler_CreatePost in src/http/pkg/handlers Coverage Results" MODIFIED="1630407525051" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$TestGetAll_in_src_http_pkg_handlers.out" NAME="TestGetAll in src/http/pkg/handlers Coverage Results" MODIFIED="1630656364858" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$TestGetPost_in_src_http_pkg_handlers.out" NAME="TestGetPost in src/http/pkg/handlers Coverage Results" MODIFIED="1630654878364" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$TestGetAll_GetAll_post_Everything_OK_in_src_http_pkg_handlers.out" NAME="TestGetAll/GetAll_post_Everything_OK in src/http/pkg/handlers Coverage Results" MODIFIED="1630655918684" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$TestUpdatePost_UPDATE_post_Everything_OK_in_src_http_pkg_handlers.out" NAME="TestUpdatePost/UPDATE_post_Everything_OK in src/http/pkg/handlers Coverage Results" MODIFIED="1630657077114" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$go_test_http.out" NAME="go test http Coverage Results" MODIFIED="1633013312249" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$TestCreatePost_in_src_http_pkg_handlers.out" NAME="TestCreatePost in src/http/pkg/handlers Coverage Results" MODIFIED="1630595218053" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$TestGetPost_GET_post_Everything_OK_02_in_src_http_pkg_handlers.out" NAME="TestGetPost/GET_post_Everything_OK#02 in src/http/pkg/handlers Coverage Results" MODIFIED="1630655550224" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$TestCreatePost_Wrong_Method_in_src_http_pkg_handlers.out" NAME="TestCreatePost/Wrong_Method in src/http/pkg/handlers Coverage Results" MODIFIED="1630484557558" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$TestUploadPost_in_src_http_pkg_handlers.out" NAME="TestUploadPost in src/http/pkg/handlers Coverage Results" MODIFIED="1630588268422" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$TestCreatePost_POST_couldn_t_create_in_src_http_pkg_handlers.out" NAME="TestCreatePost/POST_couldn't_create in src/http/pkg/handlers Coverage Results" MODIFIED="1630421915861" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$TestDeletePost_in_src_http_pkg_handlers.out" NAME="TestDeletePost in src/http/pkg/handlers Coverage Results" MODIFIED="1630656709100" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$TestRoutes_POST_post_Everything_OK_in_src_http_pkg_handlers.out" NAME="TestRoutes/POST_post_Everything_OK in src/http/pkg/handlers Coverage Results" MODIFIED="1630664310971" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$TestCreatePost_POST_post_Everything_OK_in_src_http_pkg_handlers.out" NAME="TestCreatePost/POST_post_Everything_OK in src/http/pkg/handlers Coverage Results" MODIFIED="1630595023276" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$TestCreatePost_POST_post_Everything_OK_in_src_http_pkg_handlers__1_.out" NAME="TestCreatePost/POST_post_Everything_OK in src/http/pkg/handlers (1) Coverage Results" MODIFIED="1630653869568" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$go_test_src_http_pkg_handlers.out" NAME="go test src/http/pkg/handlers Coverage Results" MODIFIED="1633008872415" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$TestUpdatePost_in_src_http_pkg_handlers.out" NAME="TestUpdatePost in src/http/pkg/handlers Coverage Results" MODIFIED="1630657698342" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/http$go_test_src_http_pkg_services.out" NAME="go test src/http/pkg/services Coverage Results" MODIFIED="1633016782336" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>
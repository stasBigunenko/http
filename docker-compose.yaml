version: "3.1"

services:
  http:
    container_name: "http_pr"
    build:
      context: "./"
      dockerfile: "./docker/http.Dockerfile"
    ports:
      - "8085:8085"
#    links:
#      - "grpc:grpc"
    environment:
      PORT_HTTP: ":8085"
      GRPC: "grpc:9000"
      RMQ_PATH: "rabbitmq-broker:5672/"
      RMQ_LOG: "guest"
      RMQ_PASS: "guest"
    depends_on:
      - rabbitmq-broker

  grpc:
    container_name: "grpc"
    build:
      context: "./"
      dockerfile: "./docker/grpc.Dockerfile"
    ports:
      - "9000:9000"
    environment:
      TCP_PORT: ":9000"
      DB_TYPE: "inmemory"
      REDIS_ADDR: "redis:6379"
      REDIS_DB: "redisDB"
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: "5432"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "qwerty"
      POSTGRES_DB: "postgres"
      POSTGRES_SSL: "disable"
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: "root"
      MONGO_ADDR: "mongodb:27017"
      ELK_ADDR: "http://localhost:9200"
#    links:
#      - "elasticsearch:elasticsearch"

#  redis:
#    container_name: "redis"
#    image: redis
#
#  postgres:
#    container_name: "postgres"
#    image: postgres:latest
#    restart: always
#    user: "postgres"
#    environment:
#      POSTGRES_USER: "postgres"
#      POSTGRES_PASSWORD: "qwerty"
#      POSTGRES_DATABASE: "postgres"
##    volumes:
##      - ./storage/postgres/database.sql:/docker-entrypoint-initdb.d/database.sql
#    ports:
#      - "5432:5432"
#
#  mongo:
#    container_name: "mongodb"
#    image: mongo:latest
#    restart: always
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: "root"
#      MONGO_INITDB_ROOT_PASSWORD: "root"
#    ports:
#      - "27017:27017"

#  elasticsearch:
#    image: elasticsearch:7.14.1
#    container_name: "elastic"
#    environment:
#      discovery.type: "single-node"
##      node.name: "elastic"
##      network.host: 0.0.0.0
##      network.publish_host: "_local_"
#    ports:
#      - "9200:9200"

#  prometheus:
#    image: prom/prometheus:latest
#    volumes:
#      - ./prometheus:/etc/prometheus/
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#      - '--storage.tsdb.path=/prometheus'
#    ports:
#      - 9090:9090
#    depends_on:
#      - http
#
#  grafana:
#    image: grafana/grafana:latest
#    ports:
#      - 3000:3000
#    depends_on:
#      - prometheus

  rabbitmq-broker:
    image: rabbitmq:management-alpine
    container_name: "rabbitmq-broker"
    hostname: rabbitmq-broker
    ports:
      - 5672:5672 # for sender and consumer connections
      - 15672:15672
    volumes:
      - ./rabbitmq/data/:/var/lib/rabbitmq
      - ./rabbitmq/log/:/var/log/rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_PASS: "guest"
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_VHOST: "/"

  consumer:
    build:
      context: "./"
      dockerfile: "./docker/consumer.Dockerfile"
    depends_on:
      - rabbitmq-broker
    environment:
      RMQ_PATH: "rabbitmq-broker:5672/"
      RMQ_LOG: "guest"
      RMQ_PASS: "guest"
    restart: on-failure